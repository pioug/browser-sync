"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _npm_1 = require("./@npm");
var task_resolve_1 = require("../task.resolve");
var task_utils_1 = require("../task.utils");
var file = require("../file.utils");
var merge = require("../../lodash.custom").merge;
var debug = require("debug")("cb:@shell");
function default_1(task, trigger) {
    return function (opts, ctx, done) {
        var args = (function () {
            if (task.origin === task_resolve_1.TaskOriginTypes.FileSystem) {
                try {
                    var contentFromDisk = file.readFileContent(task.externalTasks[0]);
                    return _npm_1.getArgs(contentFromDisk);
                }
                catch (e) {
                    return {
                        errors: [e]
                    };
                }
            }
            return _npm_1.getArgs(task.command);
        })();
        if (args.errors.length) {
            done(args.errors[0]);
            return;
        }
        var stdio = _npm_1.getStdio(trigger);
        var cbEnv = task_utils_1.getCBEnv(trigger);
        var ctxEnv = task_utils_1.getContextEnv(trigger, ctx);
        var userEnv = _npm_1.getEnv(process, trigger.config);
        var env = merge({}, process.env, userEnv, cbEnv, task.env, trigger.config.env, ctxEnv);
        debug("running %s", args.cmd);
        var emitter = _npm_1.runCommand(args.cmd, {
            cwd: trigger.config.cwd,
            env: env,
            stdio: stdio
        });
        _npm_1.handleExit(emitter, done);
        return function tearDownShellAdaptor() {
            _npm_1.teardown(emitter, task);
        };
    };
}
exports.default = default_1;
;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQHNoZWxsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2FkYXB0b3JzL0BzaGVsbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLCtCQUFnRztBQUNoRyxnREFBc0Q7QUFDdEQsNENBQXNEO0FBQ3RELG9DQUFzQztBQUN0QyxJQUFNLEtBQUssR0FBRyxPQUFPLENBQUMscUJBQXFCLENBQUMsQ0FBQyxLQUFLLENBQUM7QUFDbkQsSUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBRTVDLG1CQUF5QixJQUFVLEVBQUUsT0FBdUI7SUFFeEQsT0FBTyxVQUFVLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSTtRQUU1QixJQUFNLElBQUksR0FBRyxDQUFDO1lBQ1YsSUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLDhCQUFlLENBQUMsVUFBVSxFQUFFO2dCQUM1QyxJQUFJO29CQUNBLElBQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUNwRSxPQUFPLGNBQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQztpQkFDbkM7Z0JBQUMsT0FBTyxDQUFDLEVBQUU7b0JBQ1IsT0FBTzt3QkFDSCxNQUFNLEVBQUUsQ0FBQyxDQUFDLENBQUM7cUJBQ2QsQ0FBQztpQkFDTDthQUNKO1lBQ0QsT0FBTyxjQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2pDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFHTCxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFO1lBQ3BCLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDckIsT0FBTztTQUNWO1FBRUQsSUFBTSxLQUFLLEdBQUssZUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2xDLElBQU0sS0FBSyxHQUFLLHFCQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDbEMsSUFBTSxNQUFNLEdBQUksMEJBQWEsQ0FBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDNUMsSUFBTSxPQUFPLEdBQUcsYUFBTSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDaEQsSUFBTSxHQUFHLEdBQU8sS0FBSyxDQUFDLEVBQUUsRUFBRSxPQUFPLENBQUMsR0FBRyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLEdBQUcsRUFBRSxPQUFPLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUU3RixLQUFLLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUU5QixJQUFNLE9BQU8sR0FBRyxpQkFBVSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUU7WUFDakMsR0FBRyxFQUFFLE9BQU8sQ0FBQyxNQUFNLENBQUMsR0FBRztZQUN2QixHQUFHLEVBQUUsR0FBRztZQUNSLEtBQUssRUFBRSxLQUFLO1NBQ2YsQ0FBQyxDQUFDO1FBRUgsaUJBQVUsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFFMUIsT0FBTyxTQUFTLG9CQUFvQjtZQUNoQyxlQUFRLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQzVCLENBQUMsQ0FBQztJQUNOLENBQUMsQ0FBQztBQUNOLENBQUM7QUE1Q0QsNEJBNENDO0FBQUEsQ0FBQyJ9