import { CrossbowConfiguration } from "./config";
import { CrossbowInput, CLI, CrossbowReporter } from "./index";
import Rx = require("rx");
import { WatchTasks } from "./watch.resolve";
import { WatchRunners } from "./watch.runner";
import { ReportTypes } from "./reporter.resolve";
export interface WatchersCommandError {
    type: ReportTypes;
}
export interface WatchersCommandOutput {
    watchTasks?: WatchTasks;
    runners?: WatchRunners;
    errors: WatchersCommandError[];
}
export declare type WatchersCommandComplete = Rx.Observable<{
    setup: WatchersCommandOutput;
}>;
export default function handleIncomingWatchersCommand(cli: CLI, input: CrossbowInput, config: CrossbowConfiguration, reporter: CrossbowReporter): Rx.Observable<{
    setup: WatchersCommandOutput;
}>;
