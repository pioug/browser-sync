import { EnvFile } from "./config";
/**
 * If the user has specified any `envFile` options,
 * we need to read each file from disk and parse it's data.
 * Finally we save the results on the incoming config object
 */
export declare const addEnvFilesToObject: (config: any) => any;
/**
 * Either wrapper to handle the fact that 1 or more of the envFile
 * options could've resulted in an error.
 * If that's the case, we want to return a Left that has the report type
 * `EnvFileOptionError` so that a nice error can be printed
 */
export declare const getEnvFiles: (envFile: EnvFile, globalPrefix: string[], cwd: string) => any;
/**
 * Given a single `envFile` option, try to read & parse
 * a file from disk.
 */
export declare const getSingleEnvFile: (envFile: EnvFile, globalPrefix: string[], cwd: string) => EnvFile;
