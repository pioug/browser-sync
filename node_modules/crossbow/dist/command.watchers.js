"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var command_run_1 = require("./command.run");
var Immutable = require("immutable");
var Rx = require("rx");
var watch_utils_1 = require("./watch.utils");
var watch_resolve_1 = require("./watch.resolve");
var watch_runner_1 = require("./watch.runner");
var reporter_resolve_1 = require("./reporter.resolve");
function execute(trigger) {
    var input = trigger.input, config = trigger.config, reporter = trigger.reporter;
    var topLevelWatchers = watch_utils_1.stripBlacklisted(Object.keys(input.watch));
    if (!topLevelWatchers.length) {
        reporter({
            type: reporter_resolve_1.ReportTypes.NoWatchersAvailable
        });
        return Rx.Observable.just({
            setup: {
                errors: [{ type: reporter_resolve_1.ReportTypes.NoWatchersAvailable }]
            }
        });
    }
    var watchTasks = watch_resolve_1.resolveWatchTasks(topLevelWatchers, trigger);
    var runners = watch_runner_1.createWatchRunners(watchTasks, trigger);
    /**
     * Never continue if any runners are invalid
     */
    if (runners.invalid.length) {
        /**
         * Now log the invalid runners
         */
        runners.invalid.forEach(function (runner) {
            reporter({ type: reporter_resolve_1.ReportTypes.WatchTaskTasksErrors, data: { tasks: runner._tasks.all, runner: runner, config: config } });
        });
        return Rx.Observable.just({
            setup: {
                watchTasks: watchTasks,
                runners: runners,
                errors: [{ type: reporter_resolve_1.ReportTypes.WatchTaskTasksErrors }]
            }
        });
    }
    return Rx.Observable.just({
        setup: {
            watchTasks: watchTasks,
            runners: runners,
            errors: []
        }
    });
}
function handleIncomingWatchersCommand(cli, input, config, reporter) {
    return execute({
        shared: new Rx.BehaviorSubject(Immutable.Map({})),
        cli: cli,
        input: input,
        config: config,
        reporter: reporter,
        type: command_run_1.TriggerTypes.command
    });
}
exports.default = handleIncomingWatchersCommand;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWFuZC53YXRjaGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9jb21tYW5kLndhdGNoZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsNkNBQTJEO0FBRzNELHFDQUF3QztBQUN4Qyx1QkFBMEI7QUFDMUIsNkNBQStDO0FBQy9DLGlEQUE4RDtBQUM5RCwrQ0FBZ0U7QUFDaEUsdURBQStDO0FBWS9DLFNBQVMsT0FBTyxDQUFDLE9BQXVCO0lBQzdCLElBQUEscUJBQUssRUFBRSx1QkFBTSxFQUFFLDJCQUFRLENBQVk7SUFDMUMsSUFBTSxnQkFBZ0IsR0FBWSw4QkFBZ0IsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBRTdFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLEVBQUU7UUFDMUIsUUFBUSxDQUFDO1lBQ0wsSUFBSSxFQUFFLDhCQUFXLENBQUMsbUJBQW1CO1NBQ3hDLENBQUMsQ0FBQztRQUNILE9BQU8sRUFBRSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUM7WUFDdEIsS0FBSyxFQUFFO2dCQUNILE1BQU0sRUFBRSxDQUFDLEVBQUMsSUFBSSxFQUFFLDhCQUFXLENBQUMsbUJBQW1CLEVBQUMsQ0FBQzthQUNwRDtTQUNKLENBQUMsQ0FBQztLQUNOO0lBRUQsSUFBTSxVQUFVLEdBQUcsaUNBQWlCLENBQUMsZ0JBQWdCLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDaEUsSUFBTSxPQUFPLEdBQU0saUNBQWtCLENBQUMsVUFBVSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBRTNEOztPQUVHO0lBQ0gsSUFBSSxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRTtRQUN4Qjs7V0FFRztRQUNILE9BQU8sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFVBQUEsTUFBTTtZQUMxQixRQUFRLENBQUMsRUFBQyxJQUFJLEVBQUUsOEJBQVcsQ0FBQyxvQkFBb0IsRUFBRSxJQUFJLEVBQUUsRUFBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsTUFBTSxRQUFBLEVBQUUsTUFBTSxRQUFBLEVBQUMsRUFBQyxDQUFDLENBQUM7UUFDekcsQ0FBQyxDQUFDLENBQUM7UUFFSCxPQUFPLEVBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDO1lBQ3RCLEtBQUssRUFBRTtnQkFDSCxVQUFVLFlBQUE7Z0JBQ1YsT0FBTyxTQUFBO2dCQUNQLE1BQU0sRUFBRSxDQUFDLEVBQUMsSUFBSSxFQUFFLDhCQUFXLENBQUMsb0JBQW9CLEVBQUMsQ0FBQzthQUNyRDtTQUNKLENBQUMsQ0FBQztLQUNOO0lBRUQsT0FBTyxFQUFFLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQztRQUN0QixLQUFLLEVBQUU7WUFDSCxVQUFVLFlBQUE7WUFDVixPQUFPLFNBQUE7WUFDUCxNQUFNLEVBQUUsRUFBRTtTQUNiO0tBQ0osQ0FBQyxDQUFDO0FBQ1AsQ0FBQztBQUVELFNBQXdCLDZCQUE2QixDQUFDLEdBQVEsRUFBRSxLQUFvQixFQUFFLE1BQTZCLEVBQUUsUUFBMEI7SUFDM0ksT0FBTyxPQUFPLENBQUM7UUFDWCxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUMsZUFBZSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDakQsR0FBRyxLQUFBO1FBQ0gsS0FBSyxPQUFBO1FBQ0wsTUFBTSxRQUFBO1FBQ04sUUFBUSxVQUFBO1FBQ1IsSUFBSSxFQUFFLDBCQUFZLENBQUMsT0FBTztLQUM3QixDQUFDLENBQUM7QUFDUCxDQUFDO0FBVEQsZ0RBU0MifQ==